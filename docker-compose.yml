# services:
#   # MongoDB service
#   mongo:
#     image: mongo:latest
#     platform: linux/amd64
#     container_name: studentmanagementsystem-mongo-1
#     ports:
#       - "27017:27017"
#     volumes:
#       - ./data:/data/db
#     networks:
#       - studentnetwork

#   # Backend service (Node.js)
#   backend:
#     image: ramcharanpolabathina/studentmanagement-backend:latest

#     platform: linux/amd64
#     container_name: studentmanagementsystem-backend
#     ports:
#       - "6969:6969"  # Adjust according to your backend server's port
#     depends_on:
#       - mongo
#     networks:
#       - studentnetwork
#     environment:
#       - MONGO_URI=mongodb://mongo:27017/student_management_system
#       - NODE_ENV=production
#       - PORT=6969
#     volumes:
#       - ./backend:/app

#   # Frontend service (React, for example)
#   frontend:
#     image: ramcharanpolabathina/studentmanagement-frontend:latest
#     platform: linux/amd64
#     container_name: studentmanagementsystem-frontend
#     ports:
#       - "3000:3000"  # Adjust according to your frontend server's port
#     depends_on:
#       - backend
#     networks:
#       - studentnetwork
#     volumes:
#       - ./frontend:/app

# networks:
#   studentnetwork:
#     driver: bridge

# volumes:
#   student_data:
#     driver: local
services:
  # MongoDB service
  mongo:
    image: mongo:5.0
    container_name: studentmanagementsystem-mongo-1
    platform: linux/amd64
    ports:
      - "27017:27017"
    volumes:
      - student_data:/data/db  # Use Docker volume for persistent data
    networks:
      - studentnetwork

  # Backend service (Node.js)
  backend:
    image: ramcharanpolabathina/studentmanagement-backend:latest
    platform: linux/amd64
    container_name: studentmanagementsystem-backend
    ports:
      - "6969:6969"  # Adjust according to your backend server's port
    depends_on:
      - mongo
    networks:
      - studentnetwork
    environment:
      - MONGO_URI=mongodb://mongo:27017/student_management_system
      - NODE_ENV=production
      - PORT=6969
    volumes:
      - ./backend:/app

  # Frontend service (React)
  frontend:
    image: ramcharanpolabathina/studentmanagement-frontend:latest
    platform: linux/amd64
    container_name: studentmanagementsystem-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - studentnetwork
    volumes:
      - ./frontend:/app

networks:
  studentnetwork:
    driver: bridge

volumes:
  student_data:  # Persistent storage volume for MongoDB data
    driver: local
